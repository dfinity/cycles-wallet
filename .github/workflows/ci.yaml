name: build
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      demo: ${{ steps.filter.outputs.demo }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: .github/filters.yml
  demo:
    needs: filter
    if: ${{ needs.filter.outputs.demo == 'true' }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]
        rust: ['1.58.1']

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust
        run: |
          rustup update ${{ matrix.rust }} --no-self-update
          rustup default ${{ matrix.rust }}
          rustup target add wasm32-unknown-unknown

      - name: Install DFINITY SDK
        run: |
          DFX_VERSION=0.9.2
          pushd /tmp
          wget -q https://sdk.dfinity.org/install.sh
          yes Y | DFX_VERSION=$DFX_VERSION bash install.sh
          echo $HOME/bin >> $GITHUB_PATH
          rm install.sh
          popd

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Demo
        run: sh demo.sh

  aggregate:
    name: demo:required
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [demo, filter]
    steps:
    - name: Check demo result
      if: ${{ needs.demo.result != 'success' && needs.filter.outputs.demo == 'true' }}
      run: exit 1
