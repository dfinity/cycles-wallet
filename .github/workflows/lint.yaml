name: Lint

on: [pull_request]

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: .github/filters.yml
  lint:
    name: Lint
    needs: filter
    if: ${{ needs.filter.outputs.backend == 'true' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        rust: ['1.58.1']
        os: [ubuntu-latest]
        node-version: ['12.x']

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        run: |
          rustup update ${{ matrix.rust }}
          rustup default ${{ matrix.rust }}
          rustup component add clippy
      - name: Install DFINITY SDK
        run: |
          DFX_VERSION=0.9.2
          pushd /tmp
          wget -q https://sdk.dfinity.org/install.sh
          echo Y | DFX_VERSION=$DFX_VERSION bash install.sh
          echo $HOME/bin >> $GITHUB_PATH
          rm install.sh
          popd
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Run Lint
        run: |
          dfx start --background
          dfx canister create wallet
          dfx build wallet
          cargo clippy --verbose --tests --benches -- -D clippy::all
        env:
          RUST_BACKTRACE: 1
  
  aggregate:
    name: lint:required
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [lint, filter]
    steps:
    - name: Check lint result
      if: ${{ needs.lint.result != 'success' && needs.filter.outputs.backend == 'true' }}
      run: exit 1
